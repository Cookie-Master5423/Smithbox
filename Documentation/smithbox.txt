# Behavior
DCX.Type t;
Memory<byte> decomp = DCX.Decompress(bytes, out t);
var hvk = new HavokBinarySerializer();
MemoryStream hvkStream = new MemoryStream(decomp.ToArray());

hkRootLevelContainer rootObj = (hkRootLevelContainer)hvk.ReadAllObjects(hvkStream);

# Map
private unsafe void ComposeMap()
{
    ResourceHandle<TextureResource> mapHandle = GetImageTextureHandle("smithbox/worldmap/world_map_default");
    ResourceHandle<TextureResource> largeTileHandle = GetImageTextureHandle("smithbox/worldmap/large_tile");

    if (mapHandle != null && largeTileHandle != null)
    {
        TextureResource mapTex = mapHandle.Get();
        TextureResource largeTileTex = largeTileHandle.Get();

        if (mapTex != null && largeTileTex != null)
        {
            IntPtr mapPtr = (nint)mapTex.GPUTexture.TexHandle;
            IntPtr lrgTilePtr = (nint)largeTileTex.GPUTexture.TexHandle;

            size = GetImageSize(mapTex, true);

            var windowPos = ImGui.GetWindowPos();

            ImDrawListPtr drawListPtr = ImGui.GetWindowDrawList();
            drawListPtr.AddImage(mapPtr, windowPos, size + windowPos);
            drawListPtr.AddImage(lrgTilePtr, new Vector2(windowPos.X + 0, windowPos.Y + 0), new Vector2(windowPos.X + 496, windowPos.Y + 496));

            //ImGui.Image((nint)drawListPtr.NativePtr, size);
        }
    }
}

#--------------------------------------
# TO ADD
#--------------------------------------
# Reminder
Push 'Release' builds to github releases, not the 'Debug' builds
Update imgui.default

Additions:
 - ESD Editor
 - EMEVD Editor
 - TAE Editor
 - FXR Editor
 - MTD (Material) Editor
 - Cutscene (MQB) Editor
 - Merge Tool: user-focused merging of current project + target project
 
General:
 - Add format json support for the other MSB types.
 - Add shortcuts for Param/Model/Gparam/Texture Viewer toolbar actions
 - Remove the fixed nature of the Editor menu bar windows
 - Look into thumbnail generation for Chr/Asset/Parts
 - Add articles covering all of the features and common use-cases in Smithbox
 - Go through non-ER games and run the MSB validation and Param validation to catch any issues within them.
 
Map Editor: 
 - Add .BTAB support
 - Add .GRASS support
 - Add .ENTRYFILELIST support
 - Add 'flat' editor view: similar to Param Editor, where you can edit the MSB stuff without the viewport overhead.
 - Add enum support for the DS3 corpse poses
 - Add "Data Export" action for MSB data: output the MSB information as JSON
 - Implement ER collision (using HKLib)
 - Add "Find Value Instances" for MSB values
 
Model Editor:
 - Fix the Model Editor so it saves the FLVERs correctly
 - Add "Copy As" action for top-level node that lets the user duplicate the entire "chr" set: anibnd, chrbnd, etc
 - Add floating text for dummy poly ref IDs
 - Add floating text for co-ordinate direction (X, Y, Z)
 - Add dummy poly forward/upwards representation
 - FBX Export of Loaded Model

Param Editor:
 - Add proper support for ColorEdit section so it appears properly with compare col 
 - Add stayparam support for DS3 (requires 'blob' editor with manual definitions)
 - Able to sort row order manually
 - Add quicklink in BonfireWarpParam that opens the map that the grace is located in

Text Editor:
 - Add generator tool for quickly adding entires, e.g. weapon entries: start ID, step amount, end ID, default title, default desc
 
Gparam Editor:
 - Add mass edit power to Quick Edit: Allow edits to affect all files
 - Add gparam reference support (e.g. jump to map param, and if it is offset, that value entry offset)
 - Add command: random:[{<x>}] {} contain the min and max (needed to support the vector splits)
 - Add command: restore - Restores the value to the value from Game Root version (if it exists).
 - Work out why AC6 Bloom field can't be added

Texture Viewer: 
 - Add support for 'custom' Shoebox Layouts for non-Shoebox Layout games
  - Smithbox will instead read from a Shoebox folder in .smithbox for these games.
 - Add ability to edit Shoebox Layouts (subwindow)
 - Add ability to inject new DDS file into existing binder (would need to move ROOT instances to MOD first)
 - Support AC6 Parts (need to change how ResourceManager holds the virtual paths since the AC6 uses the same filename but with different extensions)
 - Change image preview lookup to instead look more generally for icons, change icon field TextureRefs to "{gametype}Lookup", retain the explicit matching though for other usage
 - Rework how the Text Editor patching system works, currently it is fragile and awkward due to bnd ID map sharing across multiple games
 Just map the BND ids explicitly (e.g. 412 -> 312 -> 12)
 
World Map:
 - Add the dungeon icons, add icon radius for the non-open world maps
 - Add support for large/medium/small tile overlays
 - World Map TPF may be unloaded by the map/model editor stuff (add exception for it)
 
#--------------------------------------
# Notes
#--------------------------------------
# Issues
Verify param upgrader works properly (e.g. the new params aren't scuffed in-game)
- Remove hack with PostureControlParam_WepRight and SignPuddleParam for param upgrader
 
Check the gparam editor for SOTE, may have changed

Prefab create throw error on new project creation (for a user)
TalkParam is lagging heavily with Imgui interaction once properties are visible

