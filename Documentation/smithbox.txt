# Behavior
DCX.Type t;
Memory<byte> decomp = DCX.Decompress(bytes, out t);
var hvk = new HavokBinarySerializer();
MemoryStream hvkStream = new MemoryStream(decomp.ToArray());

hkRootLevelContainer rootObj = (hkRootLevelContainer)hvk.ReadAllObjects(hvkStream);

# Map
private unsafe void ComposeMap()
{
    ResourceHandle<TextureResource> mapHandle = GetImageTextureHandle("smithbox/worldmap/world_map_default");
    ResourceHandle<TextureResource> largeTileHandle = GetImageTextureHandle("smithbox/worldmap/large_tile");

    if (mapHandle != null && largeTileHandle != null)
    {
        TextureResource mapTex = mapHandle.Get();
        TextureResource largeTileTex = largeTileHandle.Get();

        if (mapTex != null && largeTileTex != null)
        {
            IntPtr mapPtr = (nint)mapTex.GPUTexture.TexHandle;
            IntPtr lrgTilePtr = (nint)largeTileTex.GPUTexture.TexHandle;

            size = GetImageSize(mapTex, true);

            var windowPos = ImGui.GetWindowPos();

            ImDrawListPtr drawListPtr = ImGui.GetWindowDrawList();
            drawListPtr.AddImage(mapPtr, windowPos, size + windowPos);
            drawListPtr.AddImage(lrgTilePtr, new Vector2(windowPos.X + 0, windowPos.Y + 0), new Vector2(windowPos.X + 496, windowPos.Y + 496));

            //ImGui.Image((nint)drawListPtr.NativePtr, size);
        }
    }
}

#--------------------------------------
# TO ADD
#--------------------------------------
# Reminder
Push 'Release' builds to github releases, not the 'Debug' builds
Update imgui.default

Additions:
 - ESD Editor
 - EMEVD Editor
 - TAE Editor
 - FXR Editor
 - MTD (Material) Editor
 - Cutscene (MQB) Editor
 - Merge Tool: user-focused merging of current project + target project
 
General:
 - Add format json support for the other MSB types.
 - Add shortcuts for Param/Model/Gparam/Texture Viewer toolbar actions
 - Remove the fixed nature of the Editor menu bar windows
 - Look into thumbnail generation for Chr/Asset/Parts
 - Add articles covering all of the features and common use-cases in Smithbox
 - Go through non-ER games and run the MSB validation and Param validation to catch any issues within them.
 
Map Editor: 
 - Add .BTAB support
 - Add .GRASS support
 - Add .ENTRYFILELIST support
 - Add 'flat' editor view: similar to Param Editor, where you can edit the MSB stuff without the viewport overhead.
 - Add enum support for the DS3 corpse poses
 - Add "Data Export" action for MSB data: output the MSB information as JSON
 - Implement ER collision (using HKLib)
 - Add "Find Value Instances" for MSB values
 - Fix select via arrow keys in the Map Scene tree (alias seems to stop it working).
 
Model Editor: 
 - Re-build Model Editor to follow the following structure: load FLVER and present data in with non-reflection method, then create rendering aspects FROM the FLVER data.
 - Fix the Model Editor so it saves the FLVERs correctly
 - Add "Copy As" action for top-level node that lets the user duplicate the entire "chr" set: anibnd, chrbnd, etc
 - Add floating text for dummy poly ref IDs
 - Add floating text for co-ordinate direction (X, Y, Z)
 - Add dummy poly forward/upwards representation
 - FBX Export of Loaded Model

Param Editor:
 - Add proper support for ColorEdit section so it appears properly with compare col 
 - Add stayparam support for DS3 (requires 'blob' editor with manual definitions)
 - Able to sort row order manually
 - Add button to restore param to vanilla fields

Text Editor:
 - Add generator tool for quickly adding entires, e.g. weapon entries: start ID, step amount, end ID, default title, default desc
 - FMG Exporter is adding unneed \n newlines on export and then causing double newlines on import
 
Gparam Editor:
 - Add mass edit power to Quick Edit: Allow edits to affect all files
 - Add gparam reference support (e.g. jump to map param, and if it is offset, that value entry offset)
 - Add command: random:[{<x>}] {} contain the min and max (needed to support the vector splits)
 - Add command: restore - Restores the value to the value from Game Root version (if it exists).
 - Work out why AC6 Bloom field can't be added

Texture Viewer: 
 - Add support for 'custom' Shoebox Layouts for non-Shoebox Layout games
  - Smithbox will instead read from a Shoebox folder in .smithbox for these games.
 - Add ability to edit Shoebox Layouts (subwindow)
 - Add ability to inject new DDS file into existing binder (would need to move ROOT instances to MOD first)
 - Support AC6 Parts (need to change how ResourceManager holds the virtual paths since the AC6 uses the same filename but with different extensions)
 
World Map:
 - Add the dungeon icons, add icon radius for the non-open world maps
 - Add support for large/medium/small tile overlays
 
Misc:
- Generate AtkParam names by looking up TAE, finding Animation string that corresponds to BehaviorJudgeID usage, then look in c0000.hkx for the animation's generator to find the 'name' for the AtkParam row

Known Bugs:
- Icon Preview (unknown circumstances) -> Index outside bounds of array in Veldrid.Texture: TextureResource issue with icon preview (dylan)
- Image Preview is throwing errors some for some.
- Check LowRequirements doesn't invoke any rendering stuff when loading a model in Model Editor

#--------------------------------------
# Notes
#--------------------------------------
Try to implement ER collisions: requires HKLib usage

c4602

Add support for other project types to the "View in Map" and "View Model" buttons

80 - 7000 - Gravesite Plain
81 - 7020 - Ellac River
82 - 7030 - Castle Ensis
83 - 7030 - Cerulean Coast
84 - 7050 - Charo's Hidden Grave
85 - 7110 - Jagged Peak
86 - 7100 - Abyssal Woods
87 - 7060 - Stone Coffin Fissure
88 - 7010 - Belurat, Tower Settlement
89 - 7110 - Enir-Ilim
90 - 7040 - Scadu Altus
91 - 7080 - Recluses' River
92 - 7090 - Scaduview
93 - 7100 - Hinterland
94 - 7090 - Ancient Ruins of Rauh
95 - 7050 - Rauh Base
96 - 7070 - Scadutree Base
97 - 7110 - Finger Birthing Grounds
98 - 7060 - Shadow Keep
99 - 7080 - Specimen Storehouse

