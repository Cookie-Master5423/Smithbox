# Behavior
DCX.Type t;
Memory<byte> decomp = DCX.Decompress(bytes, out t);
var hvk = new HavokBinarySerializer();
MemoryStream hvkStream = new MemoryStream(decomp.ToArray());

hkRootLevelContainer rootObj = (hkRootLevelContainer)hvk.ReadAllObjects(hvkStream);

# Map
private unsafe void ComposeMap()
{
    ResourceHandle<TextureResource> mapHandle = GetImageTextureHandle("smithbox/worldmap/world_map_default");
    ResourceHandle<TextureResource> largeTileHandle = GetImageTextureHandle("smithbox/worldmap/large_tile");

    if (mapHandle != null && largeTileHandle != null)
    {
        TextureResource mapTex = mapHandle.Get();
        TextureResource largeTileTex = largeTileHandle.Get();

        if (mapTex != null && largeTileTex != null)
        {
            IntPtr mapPtr = (nint)mapTex.GPUTexture.TexHandle;
            IntPtr lrgTilePtr = (nint)largeTileTex.GPUTexture.TexHandle;

            size = GetImageSize(mapTex, true);

            var windowPos = ImGui.GetWindowPos();

            ImDrawListPtr drawListPtr = ImGui.GetWindowDrawList();
            drawListPtr.AddImage(mapPtr, windowPos, size + windowPos);
            drawListPtr.AddImage(lrgTilePtr, new Vector2(windowPos.X + 0, windowPos.Y + 0), new Vector2(windowPos.X + 496, windowPos.Y + 496));

            //ImGui.Image((nint)drawListPtr.NativePtr, size);
        }
    }
}

#--------------------------------------
# TO ADD
#--------------------------------------
# Reminder
Push 'Release' builds to github releases, not the 'Debug' builds
Update imgui.default

Additions:
 - ESD Editor
 - EMEVD Editor
 - TAE Editor
 - FXR Editor
 - MTD (Material) Editor
 - Cutscene (MQB) Editor
 - Merge Tool: user-focused merging of current project + target project
 
General:
 - Add format json support for the other MSB types.
 - Add shortcuts for Param/Model/Gparam/Texture Viewer toolbar actions
 - Remove the fixed nature of the Editor menu bar windows
 - Look into thumbnail generation for Chr/Asset/Parts
 - Add articles covering all of the features and common use-cases in Smithbox
 - Go through non-ER games and run the MSB validation and Param validation to catch any issues within them.
 
Map Editor: 
 - Add .BTAB support
 - Add .GRASS support
 - Add .ENTRYFILELIST support
 - Add 'flat' editor view: similar to Param Editor, where you can edit the MSB stuff without the viewport overhead.
 - Add enum support for the DS3 corpse poses
 - Add "Data Export" action for MSB data: output the MSB information as JSON
 - Add "Find Value Instances" for MSB values
 - Fix select via arrow keys in the Map Scene tree (alias seems to stop it working).
 - Add collision display for Assets: add secondary mesh alongside main Asset mesh, that holds the collision model.
 
Model Editor: 
 - FBX Export of Loaded Model
 - Add easier toggling of model masks based on associated NpcParam (for characters)
 - Implement Material/MATBIN editor
 - Add floating text for dummy poly ref IDs
 - Add floating text for co-ordinate direction (X, Y, Z)
 - Add dummy poly forward/upwards representation

Param Editor:
 - Add proper support for ColorEdit section so it appears properly with compare col 
 - Add stayparam support for DS3 (requires 'blob' editor with manual definitions)
 - Able to sort row order manually
 - Add button to restore param to vanilla fields

Text Editor:
 - Add generator tool for quickly adding entires, e.g. weapon entries: start ID, step amount, end ID, default title, default desc
 - FMG Exporter is adding unneed \n newlines on export and then causing double newlines on import
 - Adjust FMG Updater checks so user's without the necessary files know what is lacking
 
Gparam Editor:
 - Add mass edit power to Quick Edit: Allow edits to affect all files
 - Add gparam reference support (e.g. jump to map param, and if it is offset, that value entry offset)
 - Add command: random:[{<x>}] {} contain the min and max (needed to support the vector splits)
 - Add command: restore - Restores the value to the value from Game Root version (if it exists).
 - Work out why AC6 Bloom field can't be added

Texture Viewer: 
 - Add support for 'custom' Shoebox Layouts for non-Shoebox Layout games
  - Smithbox will instead read from a Shoebox folder in .smithbox for these games.
 - Add ability to edit Shoebox Layouts (subwindow)
 - Add ability to inject new DDS file into existing binder (would need to move ROOT instances to MOD first)
 - Support AC6 Parts (need to change how ResourceManager holds the virtual paths since the AC6 uses the same filename but with different extensions)
 - Add ability to export selected icon 'section' of icon file (assuming texture has a shoebox layout)
 
World Map:
 - Add the dungeon icons, add icon radius for the non-open world maps
 - Add support for large/medium/small tile overlays
 
#--------------------------------------
# Notes
#--------------------------------------
Text Editor:
 - FIX: the patch separation of FMGs

Interface:
 - ADD: Change the toolbar panels into single "Actions" panel with collapsible groups + add drop-down actions to menu-bar
 
Model Editor:
 - FIX: Backing data is not accurate for Bones (Nodes)
 - FIX: Bypass Resource Manager stuff: implement a direct method of generating the backing aspects of a Resource, e.g. listener, rendering stuff, etc