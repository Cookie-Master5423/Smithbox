#--------------------------------------
# TO ADD
#--------------------------------------
# Reminder
Push 'Release' builds to github releases, not the 'Debug' builds
Update imgui.default

General:
 - ADD: Add format json support for the other MSB types.
 - ADD: Add articles covering all of the features and common use-cases in Smithbox
 
Interface:
 - ADD: Change the toolbar panels into single "Actions" panel with collapsible groups + add drop-down actions to menu-bar
 
Viewport:
 - ADD: support for transparent shapes, so regions can be better visualized
 - ADD: support for billboard sprites, e.g. images that are rendered towards the camera but placed at a fixed point in the viewport space
 
Behavior Editor:
 - ADD: behavior HKX editor
 - ADD: character HKX editor
 - ADD: skeleton HKX editor
 - ADD: collision HKX editor
 
Map Editor: 
 - ADD: .BTAB support
 - ADD: .GRASS support
 - ADD: .ENTRYFILELIST support
 - ADD: enum support for the DS3 corpse poses
 - ADD: "Data Export" action for MSB data: output the MSB information as JSON
 - ADD: Add collision display for Assets: add secondary mesh alongside main Asset mesh, that holds the collision model.
 - FIX: select via arrow keys in the Map Scene tree (alias seems to stop it working).
 - FIX: DS2 Map Pieces aren't loaded.
 - FIX: duping assets to new map and then pressing X to bring to camera results in incorrect placement
 
Model Editor: 
 - ADD: FBX Import into loose FLVER
 - ADD: FBX Export of Loaded Model
 - ADD: skeleton and skinning support for playing animations
 - ADD: easier toggling of model masks based on associated NpcParam (for characters)
 - ADD: floating text for dummy poly ref IDs
 - ADD: floating text for co-ordinate direction (X, Y, Z)
 - ADD: dummy poly forward/upwards representation
 - FIX: viewport meshes should reflect changes to FLVER meshes (currently initial load meshes are always used)
 - ADD: proper handling for the flag fields in the FLVER
 - ADD: GX Item mapping so the byte arrays are more comprehesible
 - FIX: flag fields: they should be a set of checkboxes that resolve into the correct int value
 - ADD: render bone connections (use patrol route method)
 - FIX: dummy position needs to be offset by parent bone (currently this is ignored)
 - FIX: account for scale

Material Editor
 - ADD: Implement Material/MATBIN editor

Param Editor:
 - ADD: stayparam support for DS3 (requires 'blob' editor with manual definitions)
 - ADD: Able to sort row order manually
 - ADD: make "Use project meta" merge in new entries instead of wholesale replacing (https://github.com/ividyon/WitchyBND/blob/main/WitchyBND/Configuration.cs)

Text Editor:
 - FIX: the patch separation of FMGs
 - FIX: vanilla entry should be preferred over dlc01/dlc02 entry
 - ADD: FMG Generator script creation modal
 - ADD: FMG Generator open script folder (for project)
 
Gparam Editor:
 - ADD: json export/import of GPARAM (plus sub-classes?)
 - ADD: gparam reference support (e.g. jump to map param, and if it is offset, that value entry offset)
 - ADD: sticky selection: don't automatically clear selection, rather only clear it if it becomes invalid

Time Act Editor
 - ADD: TAE Mass Edit tool
 - ADD: handling for event groups (currently copied events simply inherit the existing assignment)
 - ADD: Data export/import for TAE/Animation/Event
 - ADD: event graph: use table API to represent each 0.05 frame, each cell is one frame
 - FIX: TAE a330 + a331 in AC6 are not reading correctly

Texture Viewer: 
 - ADD: support for 'custom' Shoebox Layouts for non-Shoebox Layout games. Smithbox will instead read from a Shoebox folder in .smithbox for these games.
 - ADD: ability to edit Shoebox Layouts (subwindow)
 - ADD: ability to inject new DDS file into existing binder (would need to move ROOT instances to MOD first)
 - ADD: ability to export selected icon 'section' of icon file (assuming texture has a shoebox layout)
 - FIX: Support AC6 Parts (need to change how ResourceManager holds the virtual paths since the AC6 uses the same filename but with different extensions)
 - FIX: Texture Viewer holding tpfbdt open.
 
World Map:
 - ADD: the dungeon icons, add icon radius for the non-open world maps
 - ADD: support for large/medium/small tile overlays
 
#--------------------------------------
# Notes
#--------------------------------------
- ADD: finish documenting ER SOTE rows

- CHANGE: remove switch buttons for Slider/Drag elements, add tooltip that notifies use of Ctrl+Click method of getting input box

- ADD: global map prop search

// Map
<blank> - Any
<string> - Targets the specified map.
regex:[<string>] - Targets the specified maps whose name matches the specified regex.
group:[<string>] - Targets the specified pre-defined map group.

The possible map groups are:
 legacy - Target maps such as legacy dungeons and other non-tile maps.
 tile - Target all the open world tile maps.
 vanilla_tile - Target all the open world tile maps for the base game.
 dlc_tile - Target all the open world tile maps for the DLC.
                
// Property
<blank> - Any
<string> - Targets the specified property string.
group:[<string>] - Targets the specified properties whose name matches the specified regex.

// Value
<blank> - Any
<string> - Targets the specified property value.
group:[<string>] - Targets the specified property values whose value matches the specified regex.
list:[<value>,<value>,<etc>] - Targets the specified property values within the list.
range:[<min value>,<max value>] - Targets the specified property values between the minimum and maximum (inclusive).
below:[<value>] - Targets the specified property values below the specified value (inclusive).
above:[<value>] - Targets the specified property values above the specified value (inclusive).

